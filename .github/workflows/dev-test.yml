name: Execute Tests

on:
    workflow_dispatch:
    pull_request:
        branches: [ dev ]
        paths-ignore:
            - '.github/**'
            - '.idea/**'
            - '.run/**'
            - '.vscode/**'
jobs:

    docker:
        runs-on: self-hosted
        steps:
          - name: Log in to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets..DOCKER_USERNAME  }}
              password: ${{ secrets..DOCKER_PASSWORD  }}
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
            with:
              version: "lab:latest"
              driver: cloud
              endpoint: "frosit/multibuilder"
              install: true
          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              tags: "IMAGE"
              # For pull requests, export results to the build cache.
              # Otherwise, push to a registry.
              outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry' }}     


              
    # Front-End-Type-Check:
    Front-End-Type-Check:
        runs-on: self-hosted
        steps:
            -   uses: actions/checkout@v4
            -   name: Client App Install
                uses: ./.github/workflows/steps/client-app-install/
            -   name: Run Typescript type check
                run: bun run typecheck
                working-directory: src/WebAPI/ClientApp/
    # Front-End-Unit-Tests:
    Front-End-Unit-Tests:
        runs-on: self-hosted
        steps:
            -   uses: actions/checkout@v4
            -   name: Client App Install
                uses: ./.github/workflows/steps/client-app-install/
            -   name: Run Vitest tests
                run: bun run test
                working-directory: src/WebAPI/ClientApp/
    Front-End-Eslint-Check:
        runs-on: self-hosted
        steps:
            -   uses: actions/checkout@v4
            -   name: Client App Install
                uses: ./.github/workflows/steps/client-app-install/
            -   name: Run eslint check
                run: bun run lint
                working-directory: src/WebAPI/ClientApp/
    # Front-End-Integration-Tests:
    #  Front-End-Integration-Tests: TODO Tests keep randomly failing during CI, need to investigate
    #    defaults:
    #      run:
    #        working-directory: src/WebAPI/ClientApp/
    #    runs-on: ubuntu-latest
    #    strategy:
    #      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
    #      matrix:
    #        containers: [1, 2] # Uses 2 parallel instances
    #    steps:
    #      - name: Checkout Source Code
    #        uses: actions/checkout@v3
    #      - name: Cypress tests
    #        uses: cypress-io/github-action@v5
    #        with:
    #          wait-on: 'http://localhost:3030'
    #          build: npm run build
    #          start: npm run cypress:ci
    #          command: npm run cypress:run
    #          record: true
    #          parallel: true
    #          browser: chrome
    #          headless: true
    #          timeout-minutes: 5
    #          working-directory: ./src/WebAPI/ClientApp/
    #        env:
    #          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    #          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    # Back-End Unit Tests
    Back-End-Unit-Tests:
        runs-on: self-hosted
        steps:
            -   name: Checkout Source Code
                uses: actions/checkout@v4
            -   name: Dotnet Setup
                uses: ./.github/workflows/steps/dotnet-setup/
            -   name: Unit Tests
                run: dotnet test tests/UnitTests/UnitTests.sln --no-build --verbosity normal
    # Back-End Integration Tests
    Back-End-Integration-Tests:
        runs-on: self-hosted
        steps:
            -   name: Checkout Source Code
                uses: actions/checkout@v4
            -   name: Dotnet Setup
                uses: ./.github/workflows/steps/dotnet-setup/
            -   name: Integration Tests
                run: dotnet test tests/IntegrationTests/IntegrationTests.sln --no-build --verbosity normal
    # Ensure the Docker image can be built without errors
    Test-Docker-Build:
        needs: [ Front-End-Unit-Tests, Front-End-Type-Check, Front-End-Eslint-Check, Back-End-Unit-Tests, Back-End-Integration-Tests ]
        runs-on: self-hosted
        steps:
            -   name: Checkout Source Code
                uses: actions/checkout@v4
                
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
            
            -   name: Test Docker Build
                uses: elgohr/Publish-Docker-Github-Action@v5
                with:
                    dockerfile: docker/Dockerfile
                    name: frosit/plexripper
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}
                    platforms: linux/amd64,linux/arm64
                    no_push: true
                    default_branch: dev

    Test-buildx:
        runs-on: self-hosted
        steps:
            - name: Prepare
              run: |
                platform=${{ matrix.platform }}
                echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV  

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                
            -   name: Checkout Source Code
                uses: actions/checkout@v4
            
            -   name: Check if builder is there
                run: docker buildx ls && docker buildx inspect

            -   name: placeholder

            -   name: Set up SSH
                uses: MrSquaare/ssh-setup-action@2d028b70b5e397cf8314c6eaea229a6c3e34977a # v3.1.0
                with:
                  host: ssh.panel.fros.it
                  private-key: ${{ secrets.SSH_PRIVATE_KEY }}
                  private-key-name: id_rsa
                  user: root
                  
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
                with:
                    platforms: linux/amd64,linux/arm64
                    driver: docker-container
                    use: true
                    append: |
                        - endpoint: ssh://app@ssh.panel.fros.it
                          platforms: linux/amd64
                        - endpoint:  unix:///var/run/docker.sock
                          platforms: linux/arm64
                    
            - name: Build
              run: |
                docker buildx build --platform linux/amd64,linux/arm64 -t frosit/plexripper:testxxx --push --progress=plain --file docker/Dockerfile . --push


                
            
            # -   name: Test Docker Build
            #     uses: elgohr/Publish-Docker-Github-Action@v5
            #     with:
            #         dockerfile: docker/Dockerfile
            #         name: frosit/plexripper
            #         username: ${{ secrets.DOCKER_USERNAME }}
            #         password: ${{ secrets.DOCKER_PASSWORD }}
            #         platforms: linux/amd64,linux/arm64
            #         no_push: true
            #         default_branch: dev
                    
