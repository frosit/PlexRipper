########################################################################################################################
# Docker Buildx Multiarch
# =======================
#
# This action allows building and publishing Docker images for multiple architectures using Docker Buildx.
# It contains default values but allows to override them using the workflow input for manual runs.
#
# Inputs:
# - PLATFORMS: Comma seperated list of linux build platforms (default: linux/amd64,linux/arm64)
# - TAGS: Comma seperated list of tags to build for (default: multiarch-test)
#
# To Do:
# - Set tags to branch/tag/release version for other workflow triggers like push
#
# Resources:
# - https://github.com/elgohr/Publish-Docker-Github-Action
# - https://github.com/docker/setup-buildx-action
# - https://github.com/elgohr/Publish-Docker-Github-Action
name: Docker buildx
run-name: Build and publish docker images for multiple architectures
on:
  workflow_dispatch:
    inputs:
      PLATFORMS:
        description: 'Comma separated list of platforms to build for'
        required: true
        default: 'linux/amd64,linux/arm64'
      TAGS:
        description: 'Comma separated list of tags to build for'
        required: true
        default: 'multiarch-test'
  push:
    branches:
      - multiarch
    paths-ignore:
      - '.github/**'
      - '.idea/**'
      - '.run/**'
      - '.vscode/**'
      - '.releaserc.json'

env:
  DEFAULT_PLATFORMS: 'linux/amd64,linux/arm64'
  DEFAULT_TAGS: 'multiarch-test'
jobs:
  # Build And Release Docker Image
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set platforms variable
        run: |
          if [ -n "${{ github.event.inputs.PLATFORMS }}" ]; then
            PLATFORMS="${{ github.event.inputs.PLATFORMS }}"
          else
            PLATFORMS="$DEFAULT_PLATFORMS"
          fi
          echo "PLATFORMS=${PLATFORMS}" >> "$GITHUB_ENV"
          echo "Platforms: ${PLATFORMS}"
      - name: Set tags variable
        run: |
          if [ -n "${{ github.event.inputs.TAGS }}" ]; then
            TAGS="${{ github.event.inputs.TAGS }}"
          else
            TAGS="$DEFAULT_TAGS"
          fi
          echo "TAGS=${TAGS}" >> "$GITHUB_ENV"
          echo "Tags: ${TAGS}"
      - name: Publish images to registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        env:
          VERSION: ${{ env.RELEASE_VERSION }} # @todo unused variable?
        with:
          name: frosit/plexripper
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          buildargs: VERSION # @todo unused variable?
          tags: "${{ env.TAGS }}"
          platforms: "${{ env.PLATFORMS }}"
