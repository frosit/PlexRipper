########################################################################################################################
# Docker Buildx Multiarch
# =======================
#
# Docs:
# ## Building manually with external pi
#
# - Login to registry: docker login
# - Create builder: docker buildx create --name plexripper_builder --name localremote_builder0 --platform linux/amd64,linux/amd64/v2,linux/amd64/v3
# - Add node to builder: docker buildx create --name plexripper_builder --append --node argon --platform linux/arm64,linux/arm/v7,linux/arm/v6 ssh://pi@192.168.1.104 --driver-opt env.BUILDKIT_STEP_LOG_MAX_SIZE=10000000 --driver-opt env.BUILDKIT_STEP_LOG_MAX_SPEED=10000000
# - Use builder: docker buildx use plexripper_builder
# - Build: docker buildx build --no-cache --builder plexripper_builder --platform linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm64,linux/arm/v7,linux/arm/v6 -t frosit/plexripper:dev . --push
#
# Supported arches:
# * ARM: linux/arm64
# * AMD64: linux/amd64
# Resources:
# - https://github.com/elgohr/Publish-Docker-Github-Action
# - https://github.com/docker/setup-buildx-action
#
name: docker-build-multiarch
run-name: Build and publish docker images for multiple architectures
on:
  workflow_dispatch:
    inputs:
      PLATFORMS:
        description: 'Comma separated list of platforms to build for'
        required: true
        default: 'linux/amd64,linux/arm64,linux/arm/v7'
      TAGS:
        description: 'Comma separated list of tags to build for'
        required: true
        default: 'multiarch-test'
  push:
    branches:
      - multiarch
      - latest
    paths-ignore:
      - '.github/**'
      - '.idea/**'
      - '.run/**'
      - '.vscode/**'
      - '.releaserc.json'

env:
  DEFAULT_PLATFORMS: 'linux/amd64,linux/arm64,linux/arm/v7'
  DEFAULT_TAGS: 'multiarch-test'
jobs:
  # Build And Release Docker Image
  CreateDockerImagesMutliarch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set platforms variable
        run: |
          if [ -n "${{ github.event.inputs.PLATFORMS }}" ]; then
            PLATFORM="${{ github.event.inputs.PLATFORMS }}"
          else
            PLATFORMS="$DEFAULT_PLATFORMS"
          fi
          echo "::set-env name=PLATFORMS::${PLATFORMS}"
      - name: Set tags variable
        run: |
          if [ -n "${{ github.event.inputs.TAGS }}" ]; then
            TAGS="${{ github.event.inputs.TAGS }}"
          else
            TAGS="$DEFAULT_TAGS"
          fi
          echo "::set-env name=TAGS::${TAGS}"
      - name: Publish to Registry with dev tag
        uses: elgohr/Publish-Docker-Github-Action@v5
        env:
          VERSION: ${{ env.RELEASE_VERSION }}
        with:
          name: frosit/plexripper
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          buildargs: VERSION
          tags: "${{ env.TAGS }}"
          platforms: "${{ env.PLATFORMS }}"
